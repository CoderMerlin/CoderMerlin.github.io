<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>interview/java-base</title>
      <link href="/2020/05/18/interview/java-base/"/>
      <url>/2020/05/18/interview/java-base/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建-博客搭建完整教程</title>
      <link href="/2020/05/14/BLOG03-HEXO-JC/"/>
      <url>/2020/05/14/BLOG03-HEXO-JC/</url>
      
        <content type="html"><![CDATA[<blockquote><p>每天进步一点，不做curd工程师与Api调用工程师！</p></blockquote><blockquote><p>欢迎大家访问我的博客：<a href="https://codermerlin.github.io/" target="_blank" rel="noopener">Coder编程——个人博客</a></p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>其实早在三年前，刚毕业那会就在网上学着搭建自己的个人博客。后面由于其他原因（主要是<strong>懒</strong>）就没再继续管理。如今又为何重新拾起呢？</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/emoticon/htwyakszb.jpg" alt="后退我要开始装逼啦"></p><p>第一：自己本身从毕业到工作也已经有了三年时间，或多或少有了一些工作经验和感悟。<br>第二：平时有时间的时候，自己也会看看博客，写写文章（划划水）。<br>第三：工作这么久，也要记录一下自己的学习记录，分享给大家。<br>….</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/emoticon/hlbbzdl.jpg" alt="我知道了"></p><p>下面的开始写教程了，这篇教程主要参考：</p><ul><li><a href="https://www.itrhx.com/" target="_blank" rel="noopener">https://www.itrhx.com/</a></li></ul><p>他的教程写的非常详细！本文也主要参考他写的内容，并修改~</p><p>推荐文章： <a href="http://www.cnblogs.com/jhzhu/p/3893297.html" target="_blank" rel="noopener">《我为什么写博客》</a> （By 知明所以）<br>　　　　 　<a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" target="_blank" rel="noopener">《为什么你应该（从现在开始就）写博客》</a> (By 刘未鹏 | Mind Hacks)</p><h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h2><h3 id="1-1-Github-Pages"><a href="#1-1-Github-Pages" class="headerlink" title="1.1 Github Pages"></a>1.1 Github Pages</h3><p><strong>Github Pages</strong>可以被认为是用户编写的、托管在github上的静态网页。使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。此外还可以绑定自己的域名。</p><p>类似Github Pages的</p><ul><li>Gitee Pages</li><li>Gitlab Pages</li><li>Coding</li></ul><p>等等</p><p>后续我也会写文章专门介绍，这几个Pages的搭建过程，欢迎大家关注~</p><h3 id="1-2-Hexo"><a href="#1-2-Hexo" class="headerlink" title="1.2 Hexo"></a>1.2 Hexo</h3><p><strong>Hexo</strong> 是一个快速、简洁且高效的博客框架。<strong>Hexo</strong> 使用 <strong>Markdown</strong>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="2-环境安装"><a href="#2-环境安装" class="headerlink" title="2. 环境安装"></a>2. 环境安装</h2><h3 id="2-1-安装Node-js"><a href="#2-1-安装Node-js" class="headerlink" title="2.1 安装Node.js"></a>2.1 安装Node.js</h3><p>访问<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官网</a>，按需下载相应版本，默认安装可以了。</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BLOG01/A02.png" alt="Node"></p><p>更多详细教程：</p><ul><li><a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">https://www.runoob.com/nodejs/nodejs-install-setup.html</a></li><li><a href="https://blog.csdn.net/antma/article/details/86104068" target="_blank" rel="noopener">https://blog.csdn.net/antma/article/details/86104068</a></li></ul><h3 id="2-2-安装Git"><a href="#2-2-安装Git" class="headerlink" title="2.2 安装Git"></a>2.2 安装Git</h3><p>访问<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">官网</a>，按需下载相应版本，默认安装即可。</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BLOG01/A02-1.png" alt="Git官网"></p><p>更多详细教程：</p><ul><li>Win10安装：<a href="https://blog.csdn.net/qq_32786873/article/details/80570783" target="_blank" rel="noopener">https://blog.csdn.net/qq_32786873/article/details/80570783</a></li><li>Mac安装：<a href="https://www.jianshu.com/p/b91f848655af" target="_blank" rel="noopener">https://www.jianshu.com/p/b91f848655af</a></li></ul><h3 id="2-3-检查软件是否安装成功"><a href="#2-3-检查软件是否安装成功" class="headerlink" title="2.3 检查软件是否安装成功"></a>2.3 检查软件是否安装成功</h3><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BLOG01/A04.png" alt="Git"><br>同时按下 Win 键和 R 键打开运行窗口,输入 cmd ，然后输入以下命令，有相应版本信息显示则安装成功，若不正确可以卸载软件重新安装，此外若安装成功，在桌面右键鼠标，可以看到菜单里多了 Git GUI Here 和 Git Bash Here两个选项，第一个是图形界面的Git操作，另一个是命令行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BLOG01/A03.png" alt="检查版本"></p><p>正确输出版本号，说明安装成功了~</p><h2 id="3-Hexo安装"><a href="#3-Hexo安装" class="headerlink" title="3. Hexo安装"></a>3. Hexo安装</h2><p>正在编写。。。</p>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建-设置标签/分类/归档相关页面</title>
      <link href="/2020/05/12/BLOG02-HEXO-BQFLGD/"/>
      <url>/2020/05/12/BLOG02-HEXO-BQFLGD/</url>
      
        <content type="html"><![CDATA[<blockquote><p>每天进步一点，不做curd工程师与Api调用工程师</p></blockquote><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近晚上有时间就忙着倒腾自己的博客网站：<a href="https://www.coder-programming.cn/" target="_blank" rel="noopener">https://www.coder-programming.cn/</a></p><p>网站还在建设当中，我会慢慢分享自己的搭建博客的过程和遇到的问题，在这里与大家一起分享！</p><h3 id="设置标签页面"><a href="#设置标签页面" class="headerlink" title="设置标签页面"></a>设置标签页面</h3><p>主题的 _config.yml 文件中，找到如下配置<code>menu_desktop</code> 或者 <code>menu_mobile</code>。(注意：填写的路径要对应上)</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BOLG03/04.png" alt="配置项"></p><p>在<code>\source\tags</code> 中新建index.md。写入以下内容即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: tag</span><br><span class="line">index: true</span><br><span class="line">title: 所有标签</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>在需要发布的文章同样注意加入tags。举个栗子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Java学习路线整理</span><br><span class="line">updated: 2020-03-19 00:34:14</span><br><span class="line">date: 2020-03-19 00:34:14</span><br><span class="line">categories: </span><br><span class="line">  - [Java]</span><br><span class="line">  - [面试]</span><br><span class="line">tags:</span><br><span class="line">  - [Java]</span><br><span class="line">  - [面试]</span><br><span class="line">  </span><br><span class="line">top: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BOLG03/02.png" alt="标签图"></p><h3 id="设置分类页面"><a href="#设置分类页面" class="headerlink" title="设置分类页面"></a>设置分类页面</h3><p>主题的 _config.yml 文件中，找到如下配置<code>menu_desktop</code> 或者 <code>menu_mobile</code>。(注意：填写的路径要对应上)</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BOLG03/04.png" alt="配置项"></p><p>在<code>\source\categories</code> 中新建index.md。写入以下内容即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: category</span><br><span class="line">title: 所有分类</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>在需要发布的文章同样注意加入tags。举个栗子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Java学习路线整理</span><br><span class="line">updated: 2020-03-19 00:34:14</span><br><span class="line">date: 2020-03-19 00:34:14</span><br><span class="line">categories: </span><br><span class="line">  - [Java]</span><br><span class="line">  - [面试]</span><br><span class="line">tags:</span><br><span class="line">  - [Java]</span><br><span class="line">  - [面试]</span><br><span class="line">  </span><br><span class="line">top: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BOLG03/01.png" alt="分类图"></p><h3 id="设置归档页面"><a href="#设置归档页面" class="headerlink" title="设置归档页面"></a>设置归档页面</h3><p><strong>归档页面不要添加任何文件！</strong><br><strong>归档页面不要添加任何文件！</strong><br><strong>归档页面不要添加任何文件！</strong><br>重要的事说三遍！</p><p>只需要在主题的 _config.yml 文件中，找到如下配置<code>menu_desktop</code> 或者 <code>menu_mobile</code>。(注意：填写的路径要对应上), 填写<code>archives/</code>即可。</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BOLG03/04.png" alt="配置项"></p><p>效果如图：</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BOLG03/03.png" alt="归档图"></p><h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzIwMTg3NzYyOA==&mid=2247484326&idx=1&sn=0f11d4a0d23ac377a83f9fba1d4a67d4&chksm=96e672b5a191fba32b18844de26ba6dc2060a8e16b184d73c6f9dd45ca0498062eaa9273d86c&token=475512204&lang=zh_CN#rd?_blank" target="_blank" rel="noopener">[博客搭建] 增加百度统计功能</a></p><p><a href="https://www.processon.com/i/5cd53c2fe4b01941c8cf1c21" target="_blank" rel="noopener">ProcessOn是一个在线作图工具的聚合平台~</a></p><h2 id="文末"><a href="#文末" class="headerlink" title="文末"></a>文末</h2><blockquote><p>欢迎关注个人微信公众号：<strong>Coder编程</strong><br>欢迎关注<strong>Coder编程</strong>公众号，主要分享数据结构与算法、Java相关知识体系、框架知识及原理、Spring全家桶、微服务项目实战、DevOps实践之路、每日一篇互联网大厂面试或笔试题以及PMP项目管理知识等。更多精彩内容正在路上~<br>新建了一个qq群：315211365，欢迎大家进群交流一起学习。谢谢了！也可以介绍给身边有需要的朋友。</p></blockquote><blockquote><p>文章收录至<br>Github: <a href="https://github.com/CoderMerlin/coder-programming" target="_blank" rel="noopener">https://github.com/CoderMerlin/coder-programming</a><br>Gitee: <a href="https://gitee.com/573059382/coder-programming" target="_blank" rel="noopener">https://gitee.com/573059382/coder-programming</a><br>欢迎<strong>关注</strong>并star~<br><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/coder-programming-wechat.webp.jpg" alt="微信公众号"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建-增加百度统计功能</title>
      <link href="/2020/05/12/BLOG01-HEXO-BDTJ/"/>
      <url>/2020/05/12/BLOG01-HEXO-BDTJ/</url>
      
        <content type="html"><![CDATA[<blockquote><p>每天进步一点，不做curd工程师与Api调用工程师</p></blockquote><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近晚上有时间就忙着倒腾自己的博客网站：<a href="https://www.coder-programming.cn/" target="_blank" rel="noopener">https://www.coder-programming.cn/</a></p><p>网站还在建设当中，我会慢慢分享自己的搭建博客的过程和遇到的问题，在这里与大家一起分享！</p><p>百度统计是百度推出的一款免费的专业网站流量分析工具，能够告诉用户访客是如何找到并浏览用户的网站，在网站上做了些什么，非常有趣，接下来我们把百度统计添加到自己博客当中</p><p>访问<a href="https://tongji.baidu.com/" target="_blank" rel="noopener">百度统计首页</a>，注册一个账号后登陆，添加你的博客网站</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BLOG02BDTJ/01.png" alt="01"></p><p>点击<strong>增加网站</strong>,填写个人网站的信息。</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BLOG02BDTJ/02.png" alt="02"></p><p>接着点击代码获取，复制该代码<br><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BLOG02BDTJ/03.png" alt="03"></p><p>然后到目录<code>\themes\hexo-theme-material-x\layout\_partial\head.ejs</code>，里面粘贴你刚刚复制的代码。<br>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (config.baidu_analytics_key) &#123; %&gt;</span><br><span class="line">    &lt;!-- ba --&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    var _hmt &#x3D; _hmt || [];</span><br><span class="line">    (function() &#123;</span><br><span class="line">      var hm &#x3D; document.createElement(&quot;script&quot;);</span><br><span class="line">      hm.src &#x3D; &quot;https:&#x2F;&#x2F;hm.baidu.com&#x2F;hm.js?&lt;%&#x3D; config.baidu_analytics_key %&gt;&quot;;</span><br><span class="line">      var s &#x3D; document.getElementsByTagName(&quot;script&quot;)[0];</span><br><span class="line">      s.parentNode.insertBefore(hm, s);</span><br><span class="line">    &#125;)();</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>修改博客根目录下的 _config.yml 文件(注意：不是主题下的_config.yml)，将你的key填写进去：</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BLOG02BDTJ/05.png" alt="05"></p><p>所有操作完成后可以在百度统计管理页面检查代码是否安装成功，如果代码安装正确，一般20分钟后，可以查看网站分析数据</p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BLOG02BDTJ/06.png" alt="06"></p><p><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/BLOG02BDTJ/07.png" alt="07"></p><p>另外推荐：<a href="https://web.umeng.com/main.php?c=user&a=index" target="_blank" rel="noopener">友盟</a>，2010年4月在北京成立，安全、可靠、公正、第三方的网站流量统计分析系统</p><p>参考：<br><a href="https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/" target="_blank" rel="noopener">https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/</a></p><h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><p><a href="https://www.processon.com/i/5cd53c2fe4b01941c8cf1c21" target="_blank" rel="noopener">ProcessOn是一个在线作图工具的聚合平台~</a></p><h2 id="文末"><a href="#文末" class="headerlink" title="文末"></a>文末</h2><blockquote><p>欢迎关注个人微信公众号：<strong>Coder编程</strong><br>欢迎关注<strong>Coder编程</strong>公众号，主要分享数据结构与算法、Java相关知识体系、框架知识及原理、Spring全家桶、微服务项目实战、DevOps实践之路、每日一篇互联网大厂面试或笔试题以及PMP项目管理知识等。更多精彩内容正在路上~<br>新建了一个qq群：315211365，欢迎大家进群交流一起学习。谢谢了！也可以介绍给身边有需要的朋友。</p></blockquote><blockquote><p>文章收录至<br>Github: <a href="https://github.com/CoderMerlin/coder-programming" target="_blank" rel="noopener">https://github.com/CoderMerlin/coder-programming</a><br>Gitee: <a href="https://gitee.com/573059382/coder-programming" target="_blank" rel="noopener">https://gitee.com/573059382/coder-programming</a><br>欢迎<strong>关注</strong>并star~<br><img src="https://cdn.jsdelivr.net/gh/CoderMerlin/blog-image/images/coder-programming-wechat.webp.jpg" alt="微信公众号"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 百度统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习路线整理</title>
      <link href="/2020/03/19/java/"/>
      <url>/2020/03/19/java/</url>
      
        <content type="html"><![CDATA[<!-- TOC --><ul><li><a href="#java">Java</a><ul><li><a href="#基础">基础</a></li><li><a href="#并发">并发</a></li><li><a href="#jvm">JVM</a></li><li><a href="#java8-新特性">Java8 新特性</a></li><li><a href="#代码优化">代码优化</a></li></ul></li><li><a href="#网络">网络</a></li><li><a href="#操作系统">操作系统</a></li><li><a href="#数据结构">数据结构</a></li><li><a href="#算法">算法</a><ul><li><a href="#入门">入门</a></li><li><a href="#经典">经典</a></li><li><a href="#面试">面试</a></li></ul></li><li><a href="#数据库">数据库</a></li><li><a href="#系统设计">系统设计</a><ul><li><a href="#设计模式">设计模式</a></li><li><a href="#常用框架">常用框架</a><ul><li><a href="#springspringboot">Spring/SpringBoot</a></li><li><a href="#netty">Netty</a></li></ul></li><li><a href="#分布式">分布式</a></li><li><a href="#网站架构">网站架构</a></li><li><a href="#软件底层">软件底层</a></li><li><a href="#其他">其他</a></li></ul></li><li><a href="#其他-1">其他</a></li></ul><!-- /TOC --><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ul><li><strong><a href="https://book.douban.com/subject/2000732/" target="_blank" rel="noopener">《Head First Java》</a></strong> ：  可以说是我的 Java 启蒙书籍了，特别适合新手读当然也适合我们用来温故 Java 知识点。</li><li><strong><a href="https://book.douban.com/subject/25762168/" target="_blank" rel="noopener">《Java 核心技术卷 1+卷 2》</a></strong>: 很棒的两本书，建议有点 Java 基础之后再读，介绍的还是比较深入的，非常推荐。这两本书我一般也会用来巩固知识点或者当做工具书参考，是两本适合放在自己身边的好书。</li><li><strong><a href="https://book.douban.com/subject/2130190/" target="_blank" rel="noopener">《Java 编程思想 (第 4 版)》</a></strong>（推荐，豆瓣评分 9.1，3.2K+人评价）：大部分人称之为Java领域的圣经，但我不推荐初学者阅读，有点劝退的味道。稍微有点基础后阅读更好。</li><li><strong><a href="https://book.douban.com/subject/26259017/" target="_blank" rel="noopener">《JAVA 网络编程 第 4 版》</a></strong>：  可以系统的学习一下网络的一些概念以及网络编程在 Java 中的使用。</li><li><strong><a href="https://book.douban.com/subject/26740520/" target="_blank" rel="noopener">《Java性能权威指南》</a></strong>：O’Reilly 家族书，性能调优的入门书，我个人觉得性能调优是每个 Java 从业者必备知识，这本书的缺点就是太老了，但是这本书可以作为一个实战书，尤其是 JVM 调优！不适合初学者。前置书籍：《深入理解 Java 虚拟机》</li></ul><h3 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h3><ul><li><strong><a href="https://book.douban.com/subject/30351286/" target="_blank" rel="noopener">《Java 并发编程之美》</a></strong> ：<strong>我觉得这本书还是非常适合我们用来学习 Java 多线程的。这本书的讲解非常通俗易懂，作者从并发编程基础到实战都是信手拈来。</strong> 另外，这本书的作者加多自身也会经常在网上发布各种技术文章。我觉得这本书也是加多大佬这么多年在多线程领域的沉淀所得的结果吧！他书中的内容基本都是结合代码讲解，非常有说服力！</li><li><strong><a href="https://book.douban.com/subject/26663605/" target="_blank" rel="noopener">《实战 Java 高并发程序设计》</a></strong>： 这个是我第二本要推荐的书籍，比较适合作为多线程入门/进阶书籍来看。这本书内容同样是理论结合实战，对于每个知识点的讲解也比较通俗易懂，整体结构也比较清。</li><li><strong><a href="https://github.com/RedSpider1/concurrent" target="_blank" rel="noopener">《深入浅出 Java 多线程》</a></strong>：这本书是几位大厂（如阿里）的大佬开源的，Github 地址：<a href="https://github.com/RedSpider1/concurrent" target="_blank" rel="noopener">https://github.com/RedSpider1/concurrent</a>几位作者为了写好《深入浅出 Java 多线程》这本书阅读了大量的 Java 多线程方面的书籍和博客，然后再加上他们的经验总结、Demo 实例、源码解析，最终才形成了这本书。这本书的质量也是非常过硬！给作者们点个赞！这本书有统一的排版规则和语言风格、清晰的表达方式和逻辑。并且每篇文章初稿写完后，作者们就会互相审校，合并到主分支时所有成员会再次审校，最后再通篇修订了三遍。</li><li><strong>《Java 并发编程的艺术》</strong> ：这本书不是很适合作为 Java 多线程入门书籍，需要具备一定的 JVM 基础，有些东西讲的还是挺深入的。另外，就我自己阅读这本书的感觉来说，我觉得这本书的章节规划有点杂乱，但是，具体到某个知识点又很棒！这可能也和这本书由三名作者共同编写完成有关系吧！</li><li>……</li></ul><h3 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h3><ul><li><strong><a href="https://book.douban.com/subject/24722612/" target="_blank" rel="noopener">《深入理解 Java 虚拟机（第 3 版）》</a>）</strong>：必读！必读！必读！神书，建议多刷几篇。里面不光有丰富地JVM理论知识，还有JVM实战案例！必读！</li><li><strong><a href="https://book.douban.com/subject/26354292/" target="_blank" rel="noopener">《实战 JAVA 虚拟机》</a></strong>：作为入门的了解 Java 虚拟机的知识还是不错的。</li></ul><h3 id="Java8-新特性"><a href="#Java8-新特性" class="headerlink" title="Java8 新特性"></a>Java8 新特性</h3><ul><li><strong><a href="https://book.douban.com/subject/26772632/" target="_blank" rel="noopener">《Java 8 实战》</a></strong>：面向 Java 8 的技能升级，包括 Lambdas、流和函数式编程特性。实战系列的一贯风格让自己快速上手应用起来。Java 8 支持的 Lambda 是精简表达在语法上提供的支持。Java 8 提供了 Stream，学习和使用可以建立流式编程的认知。</li><li><strong><a href="https://book.douban.com/subject/26556574/" target="_blank" rel="noopener">《Java 8 编程参考官方教程》</a></strong>：建议当做工具书来用！哪里不会翻哪里！</li></ul><h3 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h3><ul><li><strong><a href="https://book.douban.com/subject/4262627/" target="_blank" rel="noopener">《重构_改善既有代码的设计》</a></strong>：豆瓣 9.1 分，重构书籍的开山鼻祖。</li><li><strong><a href="https://book.douban.com/subject/3360807/" target="_blank" rel="noopener">《Effective java 》</a></strong>：本书介绍了在 Java 编程中很多极具实用价值的经验规则，这些经验规则涵盖了大多数开发人员每天所面临的问题的解决方案。这篇文章能够非常实际地帮助你写出更加清晰、健壮和高效的代码。本书中的每条规则都以简短、独立的小文章形式出现，并通过例子代码加以进一步说明。</li><li><strong><a href="https://book.douban.com/subject/5442024/" target="_blank" rel="noopener">《代码整洁之道》</a></strong>：虽然是用 Java 语言作为例子，全篇都是在阐述 Java 面向对象的思想，但是其中大部分内容其它语言也能应用到。</li><li><strong>阿里巴巴 Java 开发手册</strong> ：<a href="https://github.com/alibaba/p3c" target="_blank" rel="noopener">https://github.com/alibaba/p3c</a></li><li><strong>Google Java 编程风格指南：</strong> <a href="http://www.hawstein.com/posts/google-java-style.html" target="_blank" rel="noopener">http://www.hawstein.com/posts/google-java-style.html</a></li></ul><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><ul><li><strong><a href="https://book.douban.com/subject/25863515/" target="_blank" rel="noopener">《图解 HTTP》</a></strong>： 讲漫画一样的讲 HTTP，很有意思，不会觉得枯燥，大概也涵盖也 HTTP 常见的知识点。因为篇幅问题，内容可能不太全面。不过，如果不是专门做网络方向研究的小伙伴想研究 HTTP 相关知识的话，读这本书的话应该来说就差不多了。</li><li><strong><a href="https://book.douban.com/subject/10746113/" target="_blank" rel="noopener">《HTTP 权威指南》</a></strong>:如果要全面了解 HTTP 非此书不可！</li></ul><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><ul><li><strong><a href="https://book.douban.com/subject/4889838/" target="_blank" rel="noopener">《鸟哥的 Linux 私房菜》</a></strong>：本书是最具知名度的 Linux 入门书《鸟哥的 Linux 私房菜基础学习篇》的最新版，全面而详细地介绍了 Linux 操作系统。</li></ul><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ul><li><strong><a href="https://book.douban.com/subject/6424904/" target="_blank" rel="noopener">《大话数据结构》</a></strong>：入门类型的书籍，读起来比较浅显易懂，适合没有数据结构基础或者说数据结构没学好的小伙伴用来入门数据结构。</li></ul><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><ul><li><strong><a href="https://book.douban.com/subject/30357170/" target="_blank" rel="noopener">《我的第一本算法书》</a> （豆瓣评分 7.1，0.2K+人评价）</strong> 一本不那么“专业”的算法书籍。和下面两本推荐的算法书籍都是比较通俗易懂，“不那么深入”的算法书籍。我个人非常推荐，配图和讲解都非常不错！</li><li><strong><a href="https://book.douban.com/subject/26979890/" target="_blank" rel="noopener">《算法图解》</a>（豆瓣评分 8.4，1.5K+人评价）</strong> ：入门类型的书籍，读起来比较浅显易懂，非常适合没有算法基础或者说算法没学好的小伙伴用来入门。示例丰富，图文并茂，以让人容易理解的方式阐释了算法.读起来比较快，内容不枯燥！</li><li><strong><a href="https://book.douban.com/subject/25894685/" target="_blank" rel="noopener">《啊哈!算法》</a> （豆瓣评分 7.7，0.5K+人评价）</strong> ：和《算法图解》类似的算法趣味入门书籍。</li></ul><h3 id="经典"><a href="#经典" class="headerlink" title="经典"></a>经典</h3><blockquote><p>下面这些书籍都是经典中的经典，但是阅读起来难度也比较大，不做太多阐述，神书就完事了！推荐先看 《算法》，然后再选下面的书籍进行进一步阅读。不需要都看，找一本好好看或者找某本书的某一个章节知识点好好看。</p></blockquote><ul><li><strong><a href="https://book.douban.com/subject/10432347/" target="_blank" rel="noopener">《算法 第四版》</a>（豆瓣评分 9.3，0.4K+人评价）：</strong> 我在大二的时候被我们的一个老师强烈安利过！自己也在当时购买了一本放在宿舍，到离开大学的时候自己大概看了一半多一点。因为内容实在太多了！另外，这本书还提供了详细的Java代码，非常适合学习 Java 的朋友来看，可以说是 Java 程序员的必备书籍之一了。再来介绍一下这本书籍吧！这本书籍算的上是算法领域经典的参考书，全面介绍了关于算法和数据结构的必备知识，并特别针对排序、搜索、图处理和字符串处理进行了论述。</li><li><strong><a href="https://book.douban.com/subject/3227098/" target="_blank" rel="noopener">编程珠玑</a>（豆瓣评分 9.1，2K+人评价）</strong> ：经典名著，被无数读者强烈推荐的书籍，几乎是顶级程序员必看的书籍之一了。这本书的作者也非常厉害，Java之父 James Gosling 就是他的学生。很多人都说这本书不是教你具体的算法，而是教你一种编程的思考方式。这种思考方式不仅仅在编程领域适用，在其他同样适用。</li><li><strong><a href="https://book.douban.com/subject/4048566/" target="_blank" rel="noopener">《算法设计手册》</a>（豆瓣评分9.1 ， 45人评价）</strong> :被 <a href="https://teachyourselfcs.com/" target="_blank" rel="noopener">Teach Yourself Computer Science</a> 强烈推荐的一本算法书籍。</li><li><strong><a href="https://book.douban.com/subject/20432061/" target="_blank" rel="noopener">《算法导论》</a> （豆瓣评分 9.2，0.4K+人评价）</strong></li><li><strong><a href="https://book.douban.com/subject/1130500/" target="_blank" rel="noopener">《计算机程序设计艺术（第1卷）》</a>（豆瓣评分 9.4，0.4K+人评价）</strong> </li></ul><h3 id="面试-1"><a href="#面试-1" class="headerlink" title="面试"></a>面试</h3><ol><li><strong><a href="https://book.douban.com/subject/6966465/" target="_blank" rel="noopener">《剑指Offer》</a>（豆瓣评分 8.3，0.7K+人评价）</strong>这本面试宝典上面涵盖了很多经典的算法面试题，如果你要准备大厂面试的话一定不要错过这本书。《剑指Offer》 对应的算法编程题部分的开源项目解析：<a href="https://github.com/gatieme/CodingInterviews" target="_blank" rel="noopener">CodingInterviews</a></li><li><strong><a href="https://book.douban.com/subject/30422021/" target="_blank" rel="noopener">程序员代码面试指南：IT名企算法与数据结构题目最优解（第2版）</a> （豆瓣评分 8.7，0.2K+人评价）</strong> ：题目相比于《剑指 offer》 来说要难很多，题目涵盖面相比于《剑指 offer》也更加全面。全书一共有将近300道真实出现过的经典代码面试题。</li><li><strong><a href="https://book.douban.com/subject/3004255/" target="_blank" rel="noopener">编程之美</a>（豆瓣评分 8.4，3K+人评价）</strong>：这本书收集了约60道算法和程序设计题目，这些题目大部分在近年的笔试、面试中出现过，或者是被微软员工热烈讨论过。作者试图从书中各种有趣的问题出发，引导读者发现问题，分析问题，解决问题，寻找更优的解法。</li></ol><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p><strong>MySQL:</strong></p><ul><li><strong><a href="https://book.douban.com/subject/23008813/" target="_blank" rel="noopener">《高性能 MySQL》</a></strong>：这本书不用多说了把！MySQL 领域的经典之作，拥有广泛的影响力。不但适合数据库管理员（dba）阅读，也适合开发人员参考学习。不管是数据库新手还是专家，相信都能从本书有所收获。如果你的时间不够的话，第5章关于索引的内容和第6章关于查询的内容是必读的！</li><li><a href="https://book.douban.com/subject/24708143/" target="_blank" rel="noopener">《MySQL 技术内幕-InnoDB 存储引擎》</a>（推荐，豆瓣评分 8.7）：了解 InnoDB 存储引擎底层原理必备的一本书，比较深入。</li></ul><p><strong>Redis:</strong></p><ul><li><strong><a href="https://book.douban.com/subject/26612779/" target="_blank" rel="noopener">《Redis 实战》</a></strong>：如果你想了解 Redis 的一些概念性知识的话，这本书真的非常不错。</li><li><strong><a href="https://book.douban.com/subject/25900156/" target="_blank" rel="noopener">《Redis 设计与实现》</a></strong>：也还行吧！</li></ul><h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><ul><li><strong><a href="https://book.douban.com/subject/1052241/" target="_blank" rel="noopener">《设计模式 : 可复用面向对象软件的基础》</a></strong> ：设计模式的经典！</li><li><strong><a href="https://book.douban.com/subject/2243615/" target="_blank" rel="noopener">《Head First 设计模式（中文版）》</a></strong> ：相当赞的一本设计模式入门书籍。用实际的编程案例讲解算法设计中会遇到的各种问题和需求变更（对的，连需求变更都考虑到了！），并以此逐步推导出良好的设计模式解决办法。</li><li><strong><a href="https://book.douban.com/subject/2334288/" target="_blank" rel="noopener">《大话设计模式》</a></strong> ：本书通篇都是以情景对话的形式，用多个小故事或编程示例来组织讲解GOF(即《设计模式 : 可复用面向对象软件的基础》这本书))，但是不像《设计模式 : 可复用面向对象软件的基础》难懂。但是设计模式只看书是不够的，还是需要在实际项目中运用，在实战中体会。</li></ul><h3 id="常用框架"><a href="#常用框架" class="headerlink" title="常用框架"></a>常用框架</h3><h4 id="Spring-SpringBoot"><a href="#Spring-SpringBoot" class="headerlink" title="Spring/SpringBoot"></a>Spring/SpringBoot</h4><ul><li><strong><a href="https://book.douban.com/subject/26767354/" target="_blank" rel="noopener">《Spring 实战（第 4 版）》</a></strong> ：不建议当做入门书籍读，入门的话可以找点国人的书或者视频看。这本定位就相当于是关于 Spring 的新华字典，只有一些基本概念的介绍和示例，涵盖了 Spring 的各个方面，但都不够深入。就像作者在最后一页写的那样：“学习 Spring，这才刚刚开始”。</li><li><strong>《<a href="https://book.douban.com/subject/30452948/" target="_blank" rel="noopener">Spring源码深度解析 第2版</a>》</strong>  ：读Spring源码必备的一本书籍。市面上关于Spring源码分析的书籍太少了。</li><li><strong><a href="https://book.douban.com/subject/30452637/" target="_blank" rel="noopener">《Spring 5高级编程（第5版）》</a></strong> ：推荐阅读，对于Spring5的新特性介绍的很好！不过内容比较多，可以作为工具书参考。</li><li><strong><a href="https://read.douban.com/ebook/58113975/?dcs=subject-rec&dcm=douban&dct=26767354" target="_blank" rel="noopener">《精通Spring4.x企业应用开发实战》</a></strong> :通过实战讲解，比较适合作为Spring入门书籍来看。</li><li><strong><a href="https://book.douban.com/subject/26652876/" target="_blank" rel="noopener">《Spring入门经典》</a></strong> ：适合入门，也有很多示例！</li><li><strong><a href="https://book.douban.com/subject/34894533/" target="_blank" rel="noopener">《Spring Boot实战派》</a></strong> ：这本书使用的Spring Boot 2.0+的版本，还算比较新。整本书采用“知识点+实例”的形式编写。本书通过“58个基于知识的实例+2个综合性的项目”，深入地讲解Spring Boot的技术原理、知识点和具体应用；把晦涩难懂的理论用实例展现出来，使得读者对知识的理解变得非常容易，同时也立即学会如何使用它。说实话，我还是比较推荐这本书的。</li><li><strong><a href="https://book.douban.com/subject/33390560/" target="_blank" rel="noopener">《Spring Boot编程思想（核心篇）》</a></strong> ：SpringBoot深入书，不适合初学者。书尤其的厚，这本书的缺点是书的很多知识点的讲解过于啰嗦和拖沓，优点是书中对SpringBoot内部原理讲解很清楚。</li></ul><h4 id="Netty"><a href="#Netty" class="headerlink" title="Netty"></a>Netty</h4><ul><li><strong><a href="https://book.douban.com/subject/30381214/" target="_blank" rel="noopener">《Netty进阶之路：跟着案例学Netty》</a></strong> : 这本书的优点是有不少实际的案例的讲解，通过案例来学习是很不错的！</li><li><strong><a href="https://waylau.gitbooks.io/netty-4-user-guide/content/" target="_blank" rel="noopener">《Netty 4.x 用户指南》</a></strong> ：《Netty 4.x 用户指南》中文翻译（包含了官方文档以及其他文章）。</li><li><strong><a href="https://juejin.im/book/5b4bc28bf265da0f60130116?referrer=59fbb2daf265da4319559f3a" target="_blank" rel="noopener">《Netty 入门与实战：仿写微信 IM 即时通讯系统》</a></strong>   ：基于 Netty 框架实现 IM 核心系统，带你深入学习 Netty 网络编程核心知识</li><li><strong><a href="https://book.douban.com/subject/27038538/" target="_blank" rel="noopener">《Netty 实战》</a></strong> ：可以作为工具书参考！</li></ul><h3 id="分布式"><a href="#分布式" class="headerlink" title="分布式"></a>分布式</h3><ul><li><strong><a href="https://book.douban.com/subject/26292004/" target="_blank" rel="noopener">《从 Paxos 到 Zookeeper》</a></strong>：简要介绍几种典型的分布式一致性协议，以及解决分布式一致性问题的思路，其中重点讲解了 Paxos 和 ZAB 协议。同时，本书深入介绍了分布式一致性问题的工业解决方案——ZooKeeper，并着重向读者展示这一分布式协调框架的使用方法、内部实现及运维技巧，旨在帮助读者全面了解 ZooKeeper，并更好地使用和运维 ZooKeeper。</li><li><strong><a href="https://book.douban.com/subject/27591386/" target="_blank" rel="noopener">《RabbitMQ 实战指南》</a></strong>：《RabbitMQ 实战指南》从消息中间件的概念和 RabbitMQ 的历史切入，主要阐述 RabbitMQ 的安装、使用、配置、管理、运维、原理、扩展等方面的细节。如果你想浅尝 RabbitMQ 的使用，这本书是你最好的选择；如果你想深入 RabbitMQ 的原理，这本书也是你最好的选择；总之，如果你想玩转 RabbitMQ，这本书一定是最值得看的书之一</li><li><strong><a href="https://book.douban.com/subject/27025912/" target="_blank" rel="noopener">《Spring Cloud 微服务实战》</a></strong>：从时下流行的微服务架构概念出发，详细介绍了 Spring Cloud 针对微服务架构中几大核心要素的解决方案和基础组件。对于各个组件的介绍，《Spring Cloud 微服务实战》主要以示例与源码结合的方式来帮助读者更好地理解这些组件的使用方法以及运行原理。同时，在介绍的过程中，还包含了作者在实践中所遇到的一些问题和解决思路，可供读者在实践中作为参考。</li></ul><h3 id="网站架构"><a href="#网站架构" class="headerlink" title="网站架构"></a>网站架构</h3><ul><li><strong><a href="https://book.douban.com/subject/25723064/" target="_blank" rel="noopener">《大型网站技术架构：核心原理与案例分析+李智慧》</a></strong>:这本书我读过，基本不需要你有什么基础啊~读起来特别轻松，但是却可以学到很多东西，非常推荐了。另外我写过这本书的思维导图，关注我的微信公众号：“Java 面试通关手册”回复“大型网站技术架构”即可领取思维导图。</li><li><strong><a href="https://book.douban.com/subject/26999243/" target="_blank" rel="noopener">《亿级流量网站架构核心技术》</a></strong>：一书总结并梳理了亿级流量网站高可用和高并发原则，通过实例详细介绍了如何落地这些原则。本书分为四部分：概述、高可用原则、高并发原则、案例实战。从负载均衡、限流、降级、隔离、超时与重试、回滚机制、压测与预案、缓存、池化、异步化、扩容、队列等多方面详细介绍了亿级流量网站的架构核心技术，让读者看后能快速运用到实践项目中。</li></ul><h3 id="软件底层"><a href="#软件底层" class="headerlink" title="软件底层"></a>软件底层</h3><ul><li><strong><a href="https://book.douban.com/subject/10426640/" target="_blank" rel="noopener">《深入剖析 Tomcat》</a></strong>：本书深入剖析 Tomcat 4 和 Tomcat 5 中的每个组件，并揭示其内部工作原理。通过学习本书，你将可以自行开发 Tomcat 组件，或者扩展已有的组件。 读完这本书，基本可以摆脱背诵面试题的尴尬。</li><li><strong><a href="https://book.douban.com/subject/26745255/" target="_blank" rel="noopener">《深入理解 Nginx（第 2 版）》</a></strong>：作者讲的非常细致，注释都写的都很工整，对于 Nginx 的开发人员非常有帮助。优点是细致，缺点是过于细致，到处都是代码片段，缺少一些抽象。</li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li><strong><a href="https://book.douban.com/subject/25953851/" target="_blank" rel="noopener">《深入分析 Java Web 技术内幕》</a></strong>：  感觉还行，涉及的东西也蛮多。</li></ul><h2 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h2><ul><li><p><strong><a href="https://read.douban.com/ebook/387525/?dcs=subject-rec&dcm=douban&dct=2243615" target="_blank" rel="noopener">《黑客与画家》</a></strong>：这本书是硅谷创业之父，Y Combinator 创始人 Paul Graham 的文集。之所以叫这个名字，是因为作者认为黑客（并非负面的那个意思）与画家有着极大的相似性，他们都是在创造，而不是完成某个任务。</p></li><li><p><strong><a href="https://book.douban.com/subject/26265544/" target="_blank" rel="noopener">《图解密码技术》</a></strong>：本书以<strong>图配文</strong>的形式，第一部分讲述了密码技术的历史沿革、对称密码、分组密码模式（包括ECB、CBC、CFB、OFB、CTR）、公钥、混合密码系统。第二部分重点介绍了认证方面的内容，涉及单向散列函数、消息认证码、数字签名、证书等。第三部分讲述了密钥、随机数、PGP、SSL/TLS 以及密码技术在现实生活中的应用。关键字：JWT 前置知识、区块链密码技术前置知识。属于密码知识入门书籍。</p></li><li><p>《人月神话》 、《程序开发心理学》 、《程序员修炼之道，从小工道专家》、 《高效程序员的45个习惯，敏捷开发修炼之道》 、《高效能程序员的修炼》 、《软技能，代码之外的生存之道》  、《程序员的职业素养》 、《程序员的思维修炼》</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享一些摘抄的优美句子~</title>
      <link href="/2020/01/14/good/"/>
      <url>/2020/01/14/good/</url>
      
        <content type="html"><![CDATA[<h5 id="1-有一个夜晚我烧毁了所有的记忆，从此我的梦就透明了。有一个早晨我扔掉了所有的昨天，从此我的脚步就轻盈了。"><a href="#1-有一个夜晚我烧毁了所有的记忆，从此我的梦就透明了。有一个早晨我扔掉了所有的昨天，从此我的脚步就轻盈了。" class="headerlink" title="1.有一个夜晚我烧毁了所有的记忆，从此我的梦就透明了。有一个早晨我扔掉了所有的昨天，从此我的脚步就轻盈了。"></a>1.有一个夜晚我烧毁了所有的记忆，从此我的梦就透明了。有一个早晨我扔掉了所有的昨天，从此我的脚步就轻盈了。</h5><p>——泰戈尔﻿﻿</p><h5 id="2-我是你路上最后一个过客，最后一个春天，最后一场雪，最后一次求生的战争"><a href="#2-我是你路上最后一个过客，最后一个春天，最后一场雪，最后一次求生的战争" class="headerlink" title="2.我是你路上最后一个过客，最后一个春天，最后一场雪，最后一次求生的战争"></a>2.我是你路上最后一个过客，最后一个春天，最后一场雪，最后一次求生的战争</h5><p>——保尔 艾吕雅﻿﻿</p><h5 id="3-虽然我已经十年没见过他，但我知道我会永远想念他。后来我再也没有交过像十二岁时那帮人一样的好朋友。也许，每个人都是这样"><a href="#3-虽然我已经十年没见过他，但我知道我会永远想念他。后来我再也没有交过像十二岁时那帮人一样的好朋友。也许，每个人都是这样" class="headerlink" title="3.虽然我已经十年没见过他，但我知道我会永远想念他。后来我再也没有交过像十二岁时那帮人一样的好朋友。也许，每个人都是这样"></a>3.虽然我已经十年没见过他，但我知道我会永远想念他。后来我再也没有交过像十二岁时那帮人一样的好朋友。也许，每个人都是这样</h5><p>——罗伯莱纳﻿﻿</p><h5 id="4-在喧闹、混杂的生活中你应该与你的内心和平相处。尽管这世上有很多假冒和欺骗，有很多单调乏味的工作和众多破灭的梦幻，他仍然是一个美好的世界。记住：你应该努力的追求幸福。"><a href="#4-在喧闹、混杂的生活中你应该与你的内心和平相处。尽管这世上有很多假冒和欺骗，有很多单调乏味的工作和众多破灭的梦幻，他仍然是一个美好的世界。记住：你应该努力的追求幸福。" class="headerlink" title="4.在喧闹、混杂的生活中你应该与你的内心和平相处。尽管这世上有很多假冒和欺骗，有很多单调乏味的工作和众多破灭的梦幻，他仍然是一个美好的世界。记住：你应该努力的追求幸福。"></a>4.在喧闹、混杂的生活中你应该与你的内心和平相处。尽管这世上有很多假冒和欺骗，有很多单调乏味的工作和众多破灭的梦幻，他仍然是一个美好的世界。记住：你应该努力的追求幸福。</h5><p>（此文于1692年镌于巴尔的摩圣保罗教堂）﻿﻿</p><h5 id="5-我开始真正爱自己，我不再继续沉溺于过去，也不再为明天而忧虑，现在的我只活在一切在发生的当下，今天我活在此时此地，如此日复一日，这就叫”完美”。"><a href="#5-我开始真正爱自己，我不再继续沉溺于过去，也不再为明天而忧虑，现在的我只活在一切在发生的当下，今天我活在此时此地，如此日复一日，这就叫”完美”。" class="headerlink" title="5.我开始真正爱自己，我不再继续沉溺于过去，也不再为明天而忧虑，现在的我只活在一切在发生的当下，今天我活在此时此地，如此日复一日，这就叫”完美”。"></a>5.我开始真正爱自己，我不再继续沉溺于过去，也不再为明天而忧虑，现在的我只活在一切在发生的当下，今天我活在此时此地，如此日复一日，这就叫”完美”。</h5><p>——《当我开始爱自己》﻿﻿</p><h5 id="6-如果有一天你不再寻找爱情，只是去爱；你不再渴望成功，只是去做；你不再追逐成长，只是去修；一切才真正开始"><a href="#6-如果有一天你不再寻找爱情，只是去爱；你不再渴望成功，只是去做；你不再追逐成长，只是去修；一切才真正开始" class="headerlink" title="6.如果有一天你不再寻找爱情，只是去爱；你不再渴望成功，只是去做；你不再追逐成长，只是去修；一切才真正开始"></a>6.如果有一天你不再寻找爱情，只是去爱；你不再渴望成功，只是去做；你不再追逐成长，只是去修；一切才真正开始</h5><p>——纪伯伦﻿﻿</p><h5 id="7-我原谅了从前的自己，就像谅解了一个野心勃勃的傻逼，体恤了一个笨手笨脚的勇士，释怀了一个难以启齿的秘密。"><a href="#7-我原谅了从前的自己，就像谅解了一个野心勃勃的傻逼，体恤了一个笨手笨脚的勇士，释怀了一个难以启齿的秘密。" class="headerlink" title="7.我原谅了从前的自己，就像谅解了一个野心勃勃的傻逼，体恤了一个笨手笨脚的勇士，释怀了一个难以启齿的秘密。﻿﻿"></a>7.我原谅了从前的自己，就像谅解了一个野心勃勃的傻逼，体恤了一个笨手笨脚的勇士，释怀了一个难以启齿的秘密。﻿﻿</h5><h5 id="8-原来可以这样爱你，什么也可以说，什么也可以不说。让我采一束月光吧！插在今夜我寂寥的窗前。过了今夜，我不会再有力气为你写诗和流泪。"><a href="#8-原来可以这样爱你，什么也可以说，什么也可以不说。让我采一束月光吧！插在今夜我寂寥的窗前。过了今夜，我不会再有力气为你写诗和流泪。" class="headerlink" title="8.原来可以这样爱你，什么也可以说，什么也可以不说。让我采一束月光吧！插在今夜我寂寥的窗前。过了今夜，我不会再有力气为你写诗和流泪。"></a>8.原来可以这样爱你，什么也可以说，什么也可以不说。让我采一束月光吧！插在今夜我寂寥的窗前。过了今夜，我不会再有力气为你写诗和流泪。</h5><p>——海烟﻿﻿</p><h5 id="9-我不知该如何珍藏明里这份温暖，也不知该将她的灵魂带往何处。我清楚地明白，我们无法保证将来能够永远在一起。横亘在我们面前的是那沉重的人生于漫长时间，让人不由得产生一种无力感"><a href="#9-我不知该如何珍藏明里这份温暖，也不知该将她的灵魂带往何处。我清楚地明白，我们无法保证将来能够永远在一起。横亘在我们面前的是那沉重的人生于漫长时间，让人不由得产生一种无力感" class="headerlink" title="9.我不知该如何珍藏明里这份温暖，也不知该将她的灵魂带往何处。我清楚地明白，我们无法保证将来能够永远在一起。横亘在我们面前的是那沉重的人生于漫长时间，让人不由得产生一种无力感"></a>9.我不知该如何珍藏明里这份温暖，也不知该将她的灵魂带往何处。我清楚地明白，我们无法保证将来能够永远在一起。横亘在我们面前的是那沉重的人生于漫长时间，让人不由得产生一种无力感</h5><p>——新海诚﻿﻿</p><h5 id="10-此刻有谁在世上某处哭，无缘无故在世上哭，在哭我。此刻有谁在夜间某处笑，无缘无故的在夜间笑，在笑我。此刻有谁在世上某处走，无缘无故的在世上走，走向我。此刻有谁在世上某处死，无缘无故在世上死，望着我。"><a href="#10-此刻有谁在世上某处哭，无缘无故在世上哭，在哭我。此刻有谁在夜间某处笑，无缘无故的在夜间笑，在笑我。此刻有谁在世上某处走，无缘无故的在世上走，走向我。此刻有谁在世上某处死，无缘无故在世上死，望着我。" class="headerlink" title="10.此刻有谁在世上某处哭，无缘无故在世上哭，在哭我。此刻有谁在夜间某处笑，无缘无故的在夜间笑，在笑我。此刻有谁在世上某处走，无缘无故的在世上走，走向我。此刻有谁在世上某处死，无缘无故在世上死，望着我。"></a>10.此刻有谁在世上某处哭，无缘无故在世上哭，在哭我。此刻有谁在夜间某处笑，无缘无故的在夜间笑，在笑我。此刻有谁在世上某处走，无缘无故的在世上走，走向我。此刻有谁在世上某处死，无缘无故在世上死，望着我。</h5><p>——里尔克﻿﻿</p><p><img src="https://upload-images.jianshu.io/upload_images/7326374-f33e20c34492e783.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="高山森林"></p><h5 id="11-不惋惜，不呼唤，我也不啼哭。一切将逝去。如苹果花丛的薄雾。金黄的落叶堆满心间，我已不再是青春少年"><a href="#11-不惋惜，不呼唤，我也不啼哭。一切将逝去。如苹果花丛的薄雾。金黄的落叶堆满心间，我已不再是青春少年" class="headerlink" title="11.不惋惜，不呼唤，我也不啼哭。一切将逝去。如苹果花丛的薄雾。金黄的落叶堆满心间，我已不再是青春少年"></a>11.不惋惜，不呼唤，我也不啼哭。一切将逝去。如苹果花丛的薄雾。金黄的落叶堆满心间，我已不再是青春少年</h5><p>——叶赛宁﻿﻿</p><h5 id="12-多希望我知道如何放弃你，你什么都没留给我却活在我心里。"><a href="#12-多希望我知道如何放弃你，你什么都没留给我却活在我心里。" class="headerlink" title="12.多希望我知道如何放弃你，你什么都没留给我却活在我心里。﻿﻿"></a>12.多希望我知道如何放弃你，你什么都没留给我却活在我心里。﻿﻿</h5><h5 id="13-最要紧的是，我们首先应该知道善良，其次要诚实，再其次是以后永远不要互相遗忘。"><a href="#13-最要紧的是，我们首先应该知道善良，其次要诚实，再其次是以后永远不要互相遗忘。" class="headerlink" title="13.最要紧的是，我们首先应该知道善良，其次要诚实，再其次是以后永远不要互相遗忘。﻿﻿"></a>13.最要紧的是，我们首先应该知道善良，其次要诚实，再其次是以后永远不要互相遗忘。﻿﻿</h5><h5 id="14-我向旧日的恋人道歉，因为我对新人如同初恋。"><a href="#14-我向旧日的恋人道歉，因为我对新人如同初恋。" class="headerlink" title="14.我向旧日的恋人道歉，因为我对新人如同初恋。"></a>14.我向旧日的恋人道歉，因为我对新人如同初恋。</h5><p>——辛波斯卡﻿﻿</p><h5 id="15-我永恒的灵魂，注视着你的心，纵然黑夜孤寂白昼如焚。"><a href="#15-我永恒的灵魂，注视着你的心，纵然黑夜孤寂白昼如焚。" class="headerlink" title="15.我永恒的灵魂，注视着你的心，纵然黑夜孤寂白昼如焚。"></a>15.我永恒的灵魂，注视着你的心，纵然黑夜孤寂白昼如焚。</h5><p>——兰波﻿﻿</p><h5 id="16-我常想，如果我拍够了足够的照片，我就不会再失去任何人。事实上，我的照片让我看到了我失去了多少"><a href="#16-我常想，如果我拍够了足够的照片，我就不会再失去任何人。事实上，我的照片让我看到了我失去了多少" class="headerlink" title="16.我常想，如果我拍够了足够的照片，我就不会再失去任何人。事实上，我的照片让我看到了我失去了多少"></a>16.我常想，如果我拍够了足够的照片，我就不会再失去任何人。事实上，我的照片让我看到了我失去了多少</h5><p>——南戈尔丁﻿﻿</p><h5 id="17-知识让我们愤世嫉俗，聪明让我们铁石心肠。我们想的太多，同情太少，除了机器我们更需要善良，没有这些品质，生命就没有意义。"><a href="#17-知识让我们愤世嫉俗，聪明让我们铁石心肠。我们想的太多，同情太少，除了机器我们更需要善良，没有这些品质，生命就没有意义。" class="headerlink" title="17.知识让我们愤世嫉俗，聪明让我们铁石心肠。我们想的太多，同情太少，除了机器我们更需要善良，没有这些品质，生命就没有意义。"></a>17.知识让我们愤世嫉俗，聪明让我们铁石心肠。我们想的太多，同情太少，除了机器我们更需要善良，没有这些品质，生命就没有意义。</h5><p>——卓别林﻿﻿</p><h5 id="18-你别赤脚走在这片草地上散步，我怕我的花园到处都是星星的碎片。"><a href="#18-你别赤脚走在这片草地上散步，我怕我的花园到处都是星星的碎片。" class="headerlink" title="18.你别赤脚走在这片草地上散步，我怕我的花园到处都是星星的碎片。"></a>18.你别赤脚走在这片草地上散步，我怕我的花园到处都是星星的碎片。</h5><p>——伊迪斯 索德格朗﻿﻿</p><h5 id="19-身体里的碳可以制成九千支铅笔，赠给诗人。身体里的铁，只够打成一枚铁钉，就钉在爱人的心上。"><a href="#19-身体里的碳可以制成九千支铅笔，赠给诗人。身体里的铁，只够打成一枚铁钉，就钉在爱人的心上。" class="headerlink" title="19.身体里的碳可以制成九千支铅笔，赠给诗人。身体里的铁，只够打成一枚铁钉，就钉在爱人的心上。﻿﻿"></a>19.身体里的碳可以制成九千支铅笔，赠给诗人。身体里的铁，只够打成一枚铁钉，就钉在爱人的心上。﻿﻿</h5><h5 id="20-岁月有加，并非垂老。理想丢弃，方坠暮年。岁月悠悠，衰微只及肌肤。热忱抛却，颓废必致灵魂。"><a href="#20-岁月有加，并非垂老。理想丢弃，方坠暮年。岁月悠悠，衰微只及肌肤。热忱抛却，颓废必致灵魂。" class="headerlink" title="20.岁月有加，并非垂老。理想丢弃，方坠暮年。岁月悠悠，衰微只及肌肤。热忱抛却，颓废必致灵魂。"></a>20.岁月有加，并非垂老。理想丢弃，方坠暮年。岁月悠悠，衰微只及肌肤。热忱抛却，颓废必致灵魂。</h5><p>——塞缪尔 厄尔曼﻿﻿</p><h5 id="21-情不知所起，一往而深"><a href="#21-情不知所起，一往而深" class="headerlink" title="21.情不知所起，一往而深"></a>21.情不知所起，一往而深</h5><p>——汤显祖﻿﻿</p><h5 id="22-渐渐觉得，友谊这个东西已经被世人捧的太高，它跟永恒其实没有太大关系。换了空间时间，总会有人离去。也总会有与当下的你心有相同的同伴不断出现，来陪你走接下来或短或长的人生。所以不要太念念不忘。也不要期待有什么回响。你要从同路者中寻找同伴，而非硬拽着旧人一起上路。"><a href="#22-渐渐觉得，友谊这个东西已经被世人捧的太高，它跟永恒其实没有太大关系。换了空间时间，总会有人离去。也总会有与当下的你心有相同的同伴不断出现，来陪你走接下来或短或长的人生。所以不要太念念不忘。也不要期待有什么回响。你要从同路者中寻找同伴，而非硬拽着旧人一起上路。" class="headerlink" title="22.渐渐觉得，友谊这个东西已经被世人捧的太高，它跟永恒其实没有太大关系。换了空间时间，总会有人离去。也总会有与当下的你心有相同的同伴不断出现，来陪你走接下来或短或长的人生。所以不要太念念不忘。也不要期待有什么回响。你要从同路者中寻找同伴，而非硬拽着旧人一起上路。﻿﻿"></a>22.渐渐觉得，友谊这个东西已经被世人捧的太高，它跟永恒其实没有太大关系。换了空间时间，总会有人离去。也总会有与当下的你心有相同的同伴不断出现，来陪你走接下来或短或长的人生。所以不要太念念不忘。也不要期待有什么回响。你要从同路者中寻找同伴，而非硬拽着旧人一起上路。﻿﻿</h5><h5 id="23-世界上最大的勇气，是压力下的优雅。"><a href="#23-世界上最大的勇气，是压力下的优雅。" class="headerlink" title="23.世界上最大的勇气，是压力下的优雅。"></a>23.世界上最大的勇气，是压力下的优雅。</h5><p>——海明威﻿﻿</p><h5 id="24-为你，千千万万遍"><a href="#24-为你，千千万万遍" class="headerlink" title="24.为你，千千万万遍"></a>24.为你，千千万万遍</h5><p>——卡勒德 胡塞尼﻿﻿</p><h5 id="25-你，一会看我一会看云；你看我时很远，你看云时很近"><a href="#25-你，一会看我一会看云；你看我时很远，你看云时很近" class="headerlink" title="25.你，一会看我一会看云；你看我时很远，你看云时很近"></a>25.你，一会看我一会看云；你看我时很远，你看云时很近</h5><p>——顾城﻿﻿</p><h5 id="26"><a href="#26" class="headerlink" title="26."></a>26.</h5><p>草在结它的种子﻿﻿</p><p>树在摇它的叶子﻿﻿</p><p>我们站着 不说话﻿﻿</p><p>就十分美好﻿﻿</p><p>——顾城《门前》﻿﻿</p><h5 id="27-曾国藩的交友原则，八交九不交："><a href="#27-曾国藩的交友原则，八交九不交：" class="headerlink" title="27.曾国藩的交友原则，八交九不交：﻿﻿"></a>27.曾国藩的交友原则，八交九不交：﻿﻿</h5><p>八交：胜己者；盛德者；趣味者；肯吃亏者；直言者；志趣广大者；惠在当厄者；体人者﻿﻿</p><p>九不交：志不同者；谀人者；恩怨颠倒者；全无性情者；不孝不悌者；迂人者；落井下石者；德薄者；好占便宜者。﻿﻿</p><h5 id="28-那一天我二十一岁，在我一生的黄金时代。我有好多奢望。我想爱，我想吃，我还想一瞬间变成天上半明半暗的云。"><a href="#28-那一天我二十一岁，在我一生的黄金时代。我有好多奢望。我想爱，我想吃，我还想一瞬间变成天上半明半暗的云。" class="headerlink" title="28.那一天我二十一岁，在我一生的黄金时代。我有好多奢望。我想爱，我想吃，我还想一瞬间变成天上半明半暗的云。"></a>28.那一天我二十一岁，在我一生的黄金时代。我有好多奢望。我想爱，我想吃，我还想一瞬间变成天上半明半暗的云。</h5><p>——王小波《黄金时代》﻿﻿</p><h5 id="29-从童年起，我便独自一人照顾着历代星辰"><a href="#29-从童年起，我便独自一人照顾着历代星辰" class="headerlink" title="29.从童年起，我便独自一人照顾着历代星辰"></a>29.从童年起，我便独自一人照顾着历代星辰</h5><p>——《孤独》白鹤林﻿﻿</p><h5 id="30-这样看你，用所有的眼睛和所有距离，就像风住了，风又起"><a href="#30-这样看你，用所有的眼睛和所有距离，就像风住了，风又起" class="headerlink" title="30.这样看你，用所有的眼睛和所有距离，就像风住了，风又起"></a>30.这样看你，用所有的眼睛和所有距离，就像风住了，风又起</h5><p>——《沉溺》冯唐﻿﻿<br><img src="https://upload-images.jianshu.io/upload_images/7326374-abdbf1d8c37fcc71.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="蓝天海滩"></p><h5 id="31-人时已尽，人世很长。我在中间应当休息，走过的人说树枝低了，走过的人说树枝在长。"><a href="#31-人时已尽，人世很长。我在中间应当休息，走过的人说树枝低了，走过的人说树枝在长。" class="headerlink" title="31.人时已尽，人世很长。我在中间应当休息，走过的人说树枝低了，走过的人说树枝在长。"></a>31.人时已尽，人世很长。我在中间应当休息，走过的人说树枝低了，走过的人说树枝在长。</h5><p>——《墓床》顾城﻿﻿</p><h5 id="32-万物皆有裂痕，那是光进来的地方。"><a href="#32-万物皆有裂痕，那是光进来的地方。" class="headerlink" title="32.万物皆有裂痕，那是光进来的地方。"></a>32.万物皆有裂痕，那是光进来的地方。</h5><p>——莱昂纳德 科恩﻿﻿</p><h5 id="33-成功只有一种，那就是用自己喜欢的方式度过一生"><a href="#33-成功只有一种，那就是用自己喜欢的方式度过一生" class="headerlink" title="33.成功只有一种，那就是用自己喜欢的方式度过一生"></a>33.成功只有一种，那就是用自己喜欢的方式度过一生</h5><p>——《明朝那些事》原出于美国记者﻿﻿</p><h5 id="34-生活永远不可能像你想象的那么好，但也不会像你想象的那么糟，无论是好的还是糟糕的时候都需要坚强"><a href="#34-生活永远不可能像你想象的那么好，但也不会像你想象的那么糟，无论是好的还是糟糕的时候都需要坚强" class="headerlink" title="34.生活永远不可能像你想象的那么好，但也不会像你想象的那么糟，无论是好的还是糟糕的时候都需要坚强"></a>34.生活永远不可能像你想象的那么好，但也不会像你想象的那么糟，无论是好的还是糟糕的时候都需要坚强</h5><p>——《人生》莫泊桑﻿﻿</p><h5 id="35-谁这时没有房屋，就不必建筑；谁这时孤独，就永远孤独，就醒着，读着，写着长信。在林荫道上来回，不安的游荡，当落叶纷飞。"><a href="#35-谁这时没有房屋，就不必建筑；谁这时孤独，就永远孤独，就醒着，读着，写着长信。在林荫道上来回，不安的游荡，当落叶纷飞。" class="headerlink" title="35.谁这时没有房屋，就不必建筑；谁这时孤独，就永远孤独，就醒着，读着，写着长信。在林荫道上来回，不安的游荡，当落叶纷飞。"></a>35.谁这时没有房屋，就不必建筑；谁这时孤独，就永远孤独，就醒着，读着，写着长信。在林荫道上来回，不安的游荡，当落叶纷飞。</h5><p>——《秋日》里尔克﻿﻿</p><h5 id="36-也许，我太会隐藏自己的悲伤；也许我太会安慰自己的伤；从阴雨走到艳阳，我路过泥泞，路过风"><a href="#36-也许，我太会隐藏自己的悲伤；也许我太会安慰自己的伤；从阴雨走到艳阳，我路过泥泞，路过风" class="headerlink" title="36.也许，我太会隐藏自己的悲伤；也许我太会安慰自己的伤；从阴雨走到艳阳，我路过泥泞，路过风"></a>36.也许，我太会隐藏自己的悲伤；也许我太会安慰自己的伤；从阴雨走到艳阳，我路过泥泞，路过风</h5><p>——《你若懂我 该多好》﻿﻿</p><h5 id="37-我想无论是在塞纳河还是滹沱河边，我们两个人都已经放下彼此，所以我并没有等，她也不会在那个路灯下了，那个灯光下笑盈盈的她和慌张无力却又自大的我，永远属于了二十出头的我们，仅止于此我很满足，毕竟我们都要朝着让自己幸福努力。"><a href="#37-我想无论是在塞纳河还是滹沱河边，我们两个人都已经放下彼此，所以我并没有等，她也不会在那个路灯下了，那个灯光下笑盈盈的她和慌张无力却又自大的我，永远属于了二十出头的我们，仅止于此我很满足，毕竟我们都要朝着让自己幸福努力。" class="headerlink" title="37.我想无论是在塞纳河还是滹沱河边，我们两个人都已经放下彼此，所以我并没有等，她也不会在那个路灯下了，那个灯光下笑盈盈的她和慌张无力却又自大的我，永远属于了二十出头的我们，仅止于此我很满足，毕竟我们都要朝着让自己幸福努力。﻿﻿"></a>37.我想无论是在塞纳河还是滹沱河边，我们两个人都已经放下彼此，所以我并没有等，她也不会在那个路灯下了，那个灯光下笑盈盈的她和慌张无力却又自大的我，永远属于了二十出头的我们，仅止于此我很满足，毕竟我们都要朝着让自己幸福努力。﻿﻿</h5><h5 id="38-一个人有两个我，一个在黑暗中醒着，一个在光明中睡着"><a href="#38-一个人有两个我，一个在黑暗中醒着，一个在光明中睡着" class="headerlink" title="38.一个人有两个我，一个在黑暗中醒着，一个在光明中睡着"></a>38.一个人有两个我，一个在黑暗中醒着，一个在光明中睡着</h5><p>——纪伯伦﻿﻿</p><h5 id="39-若我会见到你，事隔经年，我如何向你招呼，以眼泪，以沉默"><a href="#39-若我会见到你，事隔经年，我如何向你招呼，以眼泪，以沉默" class="headerlink" title="39.若我会见到你，事隔经年，我如何向你招呼，以眼泪，以沉默"></a>39.若我会见到你，事隔经年，我如何向你招呼，以眼泪，以沉默</h5><p>——拜伦﻿﻿</p><h5 id="40-枕上诗书闲处好，门前风景雨来佳"><a href="#40-枕上诗书闲处好，门前风景雨来佳" class="headerlink" title="40.枕上诗书闲处好，门前风景雨来佳"></a>40.枕上诗书闲处好，门前风景雨来佳</h5><p>——李清照﻿﻿<br><img src="https://upload-images.jianshu.io/upload_images/7326374-87ba94de06d5cd74.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="夕阳风雪"></p><h2 id="文末"><a href="#文末" class="headerlink" title="文末"></a>文末</h2><blockquote><p>欢迎关注个人微信公众号：<strong>Coder编程</strong><br>欢迎关注<strong>Coder编程</strong>公众号，主要分享数据结构与算法、Java相关知识体系、框架知识及原理、Spring全家桶、微服务项目实战、DevOps实践之路、每日一篇互联网大厂面试或笔试题以及PMP项目管理知识等。更多精彩内容正在路上~<br>也分享一些杂文~</p></blockquote><blockquote><p>文章收录至<br>Github: <a href="https://github.com/CoderMerlin/coder-programming" target="_blank" rel="noopener">https://github.com/CoderMerlin/coder-programming</a><br>Gitee: <a href="https://gitee.com/573059382/coder-programming" target="_blank" rel="noopener">https://gitee.com/573059382/coder-programming</a><br>欢迎<strong>关注</strong>并star~<br><img src="https://upload-images.jianshu.io/upload_images/7326374-0c30c361239e4cca?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信公众号"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 美文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PMP备考指南之第一章：引论</title>
      <link href="/2019/04/23/pmp/PMP02/"/>
      <url>/2019/04/23/pmp/PMP02/</url>
      
        <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/7326374-bd3bfc390a2513e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="PMP-引论.png"></p><blockquote><p>每天进步一点，不做curd工程师与Api调用工程师<br>欢迎关注个人博客网站：<a href="https://www.coder-programming.cn/" target="_blank" rel="noopener">https://www.coder-programming.cn/</a></p></blockquote><blockquote><p>本文已同步至 <a href="https://github.com/CoderMerlin/coder-programming" target="_blank" rel="noopener">GitHub</a>/<a href="https://gitee.com/573059382/coder-programming" target="_blank" rel="noopener">Gitee</a>/公众号，感兴趣的同学帮忙点波关注~</p></blockquote><h1 id="第一章-引论"><a href="#第一章-引论" class="headerlink" title="第一章  引论"></a>第一章  引论</h1><p>1、“项目管理知识体系”：应该包含所有行业、应用领域项目管理的具体知识、技能、方法和实践。<br>2、我们发的这本巨厚的书叫“项目管理知识体系指南”简称“PMBOK 指南”，PMBOK 指南的目的：</p><ul><li>收录项目管理知识体系中被“普遍公认”的“良好做法”的那一部分。</li><li>形成的一个项目管理标准和框架，提供一套项目管理专业的通用词汇；适用于所有领域、行业的项目管理。</li><li>标准实践中可以加以选择和裁剪；</li><li>PMBOK 指南只讨论单个项目的管理</li><li>PMBOK 指南只讨论项目管理的共性</li><li>它是一套项目管理的指南，并不是具体的方法论。</li></ul><h2 id="1-什么是项目？"><a href="#1-什么是项目？" class="headerlink" title="1. 什么是项目？"></a>1. 什么是项目？</h2><p>项目是：为创造独特的产品、服务或成果而进行的临时性工作。</p><p><strong>pmbok 告诉我们项目有三大特性：<code>临时性</code>、<code>独特性</code>、<code>渐进明细</code></strong>。</p><p>1）项目的过程是临时的，但临时并不意味着时间短。比如：修建体育场鸟巢是个项目，这个项目用了好几年时间，这个时间很长。过程是临时的，指的是项目有明确的起点和终点，起点是立项的时候。终点是：</p><ul><li>目标达成（正常收尾）</li><li>不能达到目标项目终止（有可能是没钱了）</li><li>项目需求不复存在</li><li>客户或发起人希望终止等等</li></ul><p>2）结果的独特性：项目创造的可交付成果是独特的，所以导致项目的不确定性和风险。项目创造出来的结果，PMBOK 里叫做可交付成果。可交付成果：可以是有形的产品，也可以是无形的服务能力、知识。比如：咱们参加PMP 培训这是一个项目，参加考试后得到的 PMP 的培训证书这是有形的产品，所掌握的项目管理知识这是无形的。这些都是可交付成果。</p><p>3）渐进明细：项目的计划不可能一步到位，随着项目的进展信息越来越详细具体、估算越来越准确，而持续改进和细化计划。由于可能发生变化，应该在整个项目生命周期中，反复开展制定项目管理计划工作，对计划进行渐进明细。</p><h3 id="1-1-商业价值"><a href="#1-1-商业价值" class="headerlink" title="1.1 商业价值"></a>1.1 商业价值</h3><p>是指组织所从事业务的整体价值，包括全部的有形和无形价值。</p><p>1）有形价值包括：货币资产、固定设施、股东权益、物品器材等</p><p>2）无形价值包括：商誉、品牌认知度、公共利益、商标等</p><p>对持续运营的有效管理可以创造商业价值。<br>对项目的投资可以提升创造商业价值的能力。</p><h2 id="2-什么是项目管理？"><a href="#2-什么是项目管理？" class="headerlink" title="2. 什么是项目管理？"></a>2. 什么是项目管理？</h2><ol><li><p>项目管理是将知识、技能、工具与技术应用于项目活动，以满足项目的要求。项目管理通过合理运用和整合 49 个项目管理过程得以实现。</p></li><li><p>49个项目管理过程归类于五大过程组：启动、规划、执行、监控、收尾。项目可能各种各样，但是项目管理的过程和过程组是通用的。</p></li><li><p>项目管理需要满足并平衡相互制约的多重因素，比如：范围、质量、进度、预算、资源、风险。</p></li></ol><h3 id="2-1-项目集管理、项目组合管理："><a href="#2-1-项目集管理、项目组合管理：" class="headerlink" title="2.1 项目集管理、项目组合管理："></a>2.1 项目集管理、项目组合管理：</h3><ol><li><p>项目集：是一组相互关联且被协调管理的项目、子项目集和项目集活动。<br>项目集重点关注项目间的依赖关系，找到管理这些依赖关系的最佳方法。比如：参加英文培训+大学英语考试 CET 四六级、托福、雅思考试。这是一组项目集。互相有关联性都是英语培训考试、有依赖关系。</p></li><li><p>项目组合：是为了实现战略目标组合在一起管理的项目、项目集、子项目组合和运营工作。为实现战略目标或便于管理而组合在一起的项目，不一定彼此有依赖关系或直接相关，但可共享资源、供应商、技术等，关注资源的优先分配。比如：周杰伦自己的本行是歌手，应该唱歌开演唱会，但是现在还做一些与本行没有关系的事，开餐厅、卖古董、开健身房等等，这些事不一定直接相关，但它是关注资源（周杰伦的钱）的优先分配，到底钱先用来开餐厅还是开健身房？并且共享了周杰伦这位共同的雇主。</p></li><li><p>项目集、项目组合和项目之间的关系：项目组合中可以包含若干项目集或项目，项目集可以包含若干项目。</p></li></ol><h2 id="3-项目与战略规划"><a href="#3-项目与战略规划" class="headerlink" title="3. 项目与战略规划"></a>3. 项目与战略规划</h2><p>项目是组织实现战略目标的常用手段。这句话的意思是说做任何一个项目，都要和组织的战略目标保持一致，如果和战略目标不一致，这个项目也就没有存在的意义。</p><p>出于以下战略考虑来批准项目：</p><ul><li>市场需求</li><li>战略机会/业务需求</li><li>社会需要</li><li>环境考虑</li><li>客户要求</li><li>技术进步</li><li>法律要求</li></ul><h3 id="3-1-项目与运营"><a href="#3-1-项目与运营" class="headerlink" title="3.1 项目与运营"></a>3.1 项目与运营</h3><p>运营是支撑日常业务，实现业务战略和战术目标的手段。<br>运营的特性：持续性、重复性。<br>项目的特性：临时性、独特性。</p><p>运营的目标是为了维持经营，运营工作中会产生项目需求，某些运营无法实现的结果需要通过项目的方式实现；<br>项目的结果可能回到运营中去，变成日常工作内容。因此，项目经理在项目中需要充分考虑来自运营部门的干系人的需求。项目的目标是实现其目标，然后结束项目。</p><h3 id="3-2-项目生命周期"><a href="#3-2-项目生命周期" class="headerlink" title="3.2 项目生命周期"></a>3.2 项目生命周期</h3><p>1 、定义：项目生命周期是指从启动到收尾的一系列阶段，这些阶段通常按顺序排列，阶段通常有时间限制，每一个阶段都是一个子项目，有明确的起点和终点。</p><p>通用的项目生命周期结构：</p><ul><li>启动项目（概念阶段）</li><li>组织与准备（开发/规划阶段）</li><li>执行项目工作（实施阶段）</li><li>结束项目（收尾阶段）</li></ul><p>需要定义多少个阶段，和管理控制要求有关。如果希望管控的更严密些，则可以多定义一些阶段；反之则可以少一些。阶段，是从技术角度来划分的；过程组，从管理的角度来划分项目。既然每一个阶段都是一个子项目，那么就意味着每一个阶段都包括了五大过程组（启动、规划、执行、监控、收尾）。</p><p>​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​</p><h3 id="3-3-项目生命周期的特征：​"><a href="#3-3-项目生命周期的特征：​" class="headerlink" title="3.3 项目生命周期的特征：​"></a>3.3 项目生命周期的特征：​</h3><p>​​​​​​​​​​<br>​​​​​​​​​​​<img src="http://upload-images.jianshu.io/upload_images/7326374-8e0503841717e38e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="生命特征"></p><p>1）成本与人力投入开始时低，执行期间最高，项目收尾结束时迅速回落；</p><p>2）项目的风险与不确定性、干系人的影响力，开始最大，逐步减小；项目一开始风险是最大的，因为一开始一切都是未知，随着项目进行中，项目渐进明细，风险和不确定性慢慢减小。干系人影响力一开始最大，产品最初只有雏形干系人很轻易的可以改变它，随着项目进展产品逐步有了明确特性，干系人如果要改变它是很困难的，变更的代价非常高，因此干系人的影响力是减小的。</p><p>3）变更的代价，开始时最小，项目收尾时最大。因为随着项目的进行成本投入越来越多，变更付出的代价也会越来越大。</p><p>3 、阶段与阶段的关系：<br>1）阶段按顺序进行，一个阶段只能在前一阶段完成后开始，称为“顺序关系”。按部就班的特点减少了项目的不确定性，但也排除缩短项目总工期的可能性。</p><p>2）为缩短项目工期，一个阶段在前一个阶段完成前开始，称为“交叠关系”。这种做法可能需要额外的资源来并行开展工作，可能增加风险和返工的机会。阶段的结束，以阶段性可交付成果的移交为标志，阶段结束时间点可称为：里程碑、阶段关口、阶段审查、阶段门、关键决策点。</p><h3 id="3-4-五种类型的生命周期："><a href="#3-4-五种类型的生命周期：" class="headerlink" title="3.4 五种类型的生命周期："></a>3.4 五种类型的生命周期：</h3><p>1）预测型生命周期：也叫完全计划型，一个阶段一个阶段的按部就班执行，适用于对项目结果了解很充分的项目。</p><p><img src="http://upload-images.jianshu.io/upload_images/7326374-1c715aa7c93b4c20?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="预测型生命周期"></p><p>先做需求分析，再做概要设计、详细设计、然后编码、测试、最后发布，按照计划去做，基本没有变更。</p><p>2）迭代型生命周期：通过一系列重复的循环活动、来不断优化产品功能。比如：磨刀，每一轮迭代都要把刀磨的更加锋利。</p><p><img src="http://upload-images.jianshu.io/upload_images/7326374-7d8f9601b2710b6c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="迭代型生命周期"></p><p>3）增量型生命周期：在预定的时间内渐进地增加产品的功能。例如：开发多功能洗衣机，第一个阶段开发出一个功能（漂洗），第二个阶段开发出第二个功能（甩干），第三个阶段开发出第三个功能（烘干）。</p><p><img src="http://upload-images.jianshu.io/upload_images/7326374-c4f4978d0555236c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="增量型生命周期"></p><p>4）适应型生命周期（也叫变更驱动、敏捷方法）：迭代型和增量型的混合。最终目标和交付的成果也难以事先确定，管理过程也经常有变化,需要应对快速变化的环境。例如：秘书为领导写稿，秘书先根据领导的最初要求写出第一个版本的草稿（可交付成果）。领导看了以后提出意见（新的需求），秘书再根据意见写出第二个草稿（可交付成果），交给领导查看。如此多次迭代，直到写出让领导满意的稿子。相当于一边提需求，一边交付。</p><p><img src="http://upload-images.jianshu.io/upload_images/7326374-79d6bf9b0d30ef04?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="适应型生命周期"></p><p>5）混合型生命周期：瀑布与敏捷的混合，充分了解或有确定需求的项目要素遵循预测型开发生命周期，而仍在发展中的要素遵循适应型开发生命周期。例如：硬件部分用预测型，软件部分用适应型。</p><p><img src="http://upload-images.jianshu.io/upload_images/7326374-b7f52ff527499302?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="混合型生命周期"></p><h3 id="3-5-项目管理过程"><a href="#3-5-项目管理过程" class="headerlink" title="3.5 项目管理过程"></a>3.5 项目管理过程</h3><p>1、过程是为创建预定的产品、服务或成果而执行的一系列相互关联的行动和活动。过程将会是以后我们面对 PMP 讲义主要内容，组织过程资产和事业环境因素即使没有列出也需要参考。事业环境因素（EEFs）限制项目的灵活性，组织过程资产（OPAs）为裁剪过程提供指南和准则。</p><p>2、过程由输入、工具与技术、输出三部分构成</p><p>Input 输入<br>Tools &amp; Technique 工具与技术<br>Output 输出</p><p>输入、工具与技术、输出简称为 ITTO<br>I 输入，需要什么？<br>TT 用什么方法和手段？<br>O 输出，产生什么？</p><p>比如：制作红茶的过程；<br>输入：茶叶、水等；<br>工具与技术：发酵、加热、烹、煮；<br>输出：红茶。</p><p>3、PMI 把项目管理分为 49 个过程；那么这 49 个过程间是怎么样联系的呢？</p><p>一个过程的输出会成为另一个过程的输入。比如我们刚才讲的例子，制作红茶的过程。输出是：红茶。对于另一个过程“制作珍珠奶茶”，此时“红茶”又作为输入了。</p><p>输入：红茶、珍珠、水<br>工具与技术：混合搅拌、煮<br>输出：珍珠奶茶</p><p>这是制作珍珠奶茶的过程。</p><p><strong>49个项目管理过程被分在5大过程组中，启动、规划、执行、监控、收 尾。PMP学习重点将围绕这49个过程的ITTO展开。</strong></p><p>49  个项目管理过程被分在 5  大过程组中，启动、规划、执行、监控、收尾。PMP学习重点将围绕这 49  个过程的 ITTO  展开。</p><p>1 ）启动过程组：</p><p>定义一个新项目或一个新阶段；过程组目的：保证干系人期望与项目目的的一致性，让干系人明了项目范围和目标，明白他们在项目和阶段中的参与，实现他们的期望。</p><ul><li>启动过程组的两个过程：识别干系人、制定项目章程。</li><li>识别干系人：是要识别他们的参与度、期望、影响力以及对项目成功的影响。</li><li>制定项目章程：一般由项目经理编写，项目管理团队协助编写。由发起人、PMO 或项目组合治理委员会等公司高层领导来批准。一旦项目章程获得批准，项目也就得到了正式的授权。</li></ul><p>2 ）规划过程组</p><p>明确项目范围，为实现目标制定行动方案；<br>过程组目的：制定用于指导项目实施的项目管理计划和项目文件。<br>过程组作用：为成功完成项目或阶段确定战略、战术及行动方案及路线。随着收集和掌握的项目信息或特性不断增多，以及发生的重大变更，项目可能需要进一步规划。项目管理计划的逐渐细化叫“渐进明细”，表明项目规划和文档编制是反复进行的秩序性活动。在规划项目、制定项目管理计划和项目文件时，项目团队应当征求所有干系人的意见，鼓励所有干系人的参与。</p><p>3）执行过程组</p><p>完成项目管理计划中确定的工作，满足项目规范要求；过程组需要：按照项目管理计划来协调人员与资源，管理干系人期望，以及整合并实施项目活动。执行的结果可能引发计划更新和基准重建，执行的偏差可能影响项目管理计划或项目文件，需要加以仔细分析，并制定适当的管理应对措施。项目的大部分预算将花费在执行过程组中。</p><p>4）监控过程组</p><p>跟踪、审查和调整项目进展与绩效，启动有必要的变更；过程组作用：定期对项目绩效进行测量和分析，从而识别与项目管理计划的偏差。控制变更，推荐纠正措施、制定预防措施等等。</p><p>5）收尾过程组</p><p>完结所有过程组的活动，正式结束项目或阶段。</p><p><img src="http://upload-images.jianshu.io/upload_images/7326374-28e58257dc3df938?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="收尾过程组"></p><p>逻辑上五个过程组是按顺序进行的，但实际上有交叉部分，监控过程组贯穿整个生命周期。阶段是从技术角度来分解项目；过程是从管理角度来分解项目。</p><h2 id="4-十五矩阵"><a href="#4-十五矩阵" class="headerlink" title="4. 十五矩阵"></a>4. 十五矩阵</h2><p>把 49 个项目管理过程归入十大项目管理知识领域和五大项目管理过程组。</p><p><img src="http://upload-images.jianshu.io/upload_images/7326374-2ac7be298da4797c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="十五矩阵"></p><p>1、最左边，纵向按照十大知识领域：项目整合管理、项目范围管理、项目时间管理、项目成本管理、项目质量管理、项目资源管理、项目沟通管理、项目风险管理、项目采购管理、项目干系人管理；</p><p>在 pmbok 第六版当中第 13 章叫相关方管理，但是考虑到干系人这个词在项目管理界用了10 多年，我们依然认为 “ 干系人 ” 更加的专业，仍然把 13 章叫做干系人管理，特此声明</p><p>第四章 项目整合管理：协调子计划的接口管理；<br>第五章 项目范围管理：确定项目哪些工作该做、哪些不该做；<br>第六章 项目进度管理：确保项目工作按时完成；<br>第七章 项目成本管理：确保项目工作按照预算完成；<br>第八章 项目质量管理：确保项目工作到达要求；<br>第九章 项目资源管理：做好实物资源和项目团队的管理；<br>第十章 项目沟通管理：有团队就需要沟通，做好沟通管理；<br>第十一章 项目风险管理：项目有不确定的、有可能发生的事件，做好风险管理；<br>第十二章 项目采购管理：有些工作自己不能做需要外包，做好采购管理；<br>第十三章 项目干系人管理：项目是满足干系人的要求，做好干系人管理。</p><p>2、最上方，横向按照项目管理过程五大过程组：启动过程组、规划过程组、执行过程组、监控过程组、收尾过程组；右边，灰色和白色填充处一共 49 个过程，是以后学习 PMP 理论的重点内容；</p><p>3、第四章项目整合管理知识领域包含:4.1 制定项目章程、4.2 制定项目管理计划、4.3 指导与管理项目执行、4.4 管理项目知识、4.5 监控项目工作、4.6 实施整体变更控制、4.7 结束项目或阶段 7 个过程。</p><p>4.1 制定项目章程过程属于启动过程组<br>4.2 制定项目管理计划过程属于规划过程组<br>4.3 指导与管理项目执行过程、4.4 管理项目知识，两个过程属于执行过程组<br>4.5 监控项目工作、4.6 实施整体变更控制，两个过程属于监控过程组<br>4.7 结束项目或阶段过程属于收尾过程组</p><p>以此类推，一共有 49 个过程。<br>可以看出之所以叫十五矩阵，是因为“十”十大知识领域，“五”五大过程组。之后的章节我们将围绕49个过程和过程的输入、工具与技术、输出展开。49个过程必须熟悉，要知道他们分别属于哪个知识领域，他们分别属于哪个过程组</p><h2 id="5-练习题"><a href="#5-练习题" class="headerlink" title="5. 练习题"></a>5. 练习题</h2><p>公司里面有 A、B、C 三个项目。这些项目根据公司的目标，按照一套相同的标准化分优先顺序。项目 B 的优先级较高，因为它将会扩大公司的市场份额，减少对不可靠供应商的依赖性。这是在执行什么活动？</p><p>A、 项目组合管理<br>B、 项目集管理<br>C、 项目管理<br>D、 份额管理</p><p>答案：A。题干说：关注资源的优先分配、减少依赖性。这是关键词</p><p>某个技术重组项目的计划处于计划编制阶段已经数月，在此期间，这项技术已得到显著的进步。这项目预计在这个月开始，而且必须更新范围管理计划来反映技术上的变化。项目经理必须向关键干系人详细说明项目范围存在的可能变更。项目经理理解项目的不确定性水平将会处于下列哪一种情况？</p><p>A、保持在预计和计划水平<br>B、增加<br>C、开始是增加，然后减少<br>D、减少</p><p>答案：D。项目一开始风险最大，因为一开始一切都是未知，随着项目进行中，项目渐进明细，风险和不确定性慢慢减小。</p><p>以下哪项陈述最准确描述了项目？</p><p>A、项目范围变更的代价在项目的最初阶段最大<br>B、项目干系人的影响在整个项目期间是相同的<br>C、在项目执行阶段成本和人力投入量达到顶峰<br>D、项目的下一阶段永远不应该开始，直到前一个阶段的可交付成果被完全审查和批准</p><p>答案：C。 项目范围变更的代价在项目的最初阶段是最小的，排除 A。项目干系人的影响在整个项目期间开始时最大，之后递减。排除 B 阶段可能交叠进行，排除 D。</p><p>在一个快速变化环境中工作的项目经理，将收集到的需求清单排列优先顺序进行工作计划。让优先级最高的可交付成果 3 周内完成。项目经理正在使用哪一种项目生命周期方法？</p><p>A、适应<br>B、预测<br>C、直觉<br>D、反复</p><p>答案 A，题干关键字“快速变化环境中”工作的 PM，这是适应型敏捷开发。快速变化就不可能用预测型，排除 B。</p><p>下列哪项陈述反映了项目的风险程度？</p><p>A、 项目初始阶段的风险最小<br>B、 风险在整个项目期间保持恒定<br>C、 项目实施过程中风险最大<br>D、 项目初始阶段风险最大</p><p>答案：D。项目的风险与不确定性，开始最大，逐步减小；</p><p>下列哪项最好地描述了项目利害关系者介入项目规划时所造成的影响？</p><p>A、耗时,使得规划过程变慢<br>B、只对内部服务合同有帮助<br>C、通常有助于制订完整、准确的项目计划<br>D、不需要，因为项目利害关系者通常不想介入</p><p>答案：C。在规划项目、制定项目管理计划和项目文件时，项目团队应当征求所以干系人的意见，鼓励所有干系人的参与。</p><p>项目经理正在负责一个十分复杂的大型项目，与项目团队成员讨论后决定分阶段予以实施，并定下了第一个阶段为设计阶段。请问在设计阶段中应进行哪些项目管理过程组？</p><p>A、启动和规划过程组<br>B、规划和执行过程组<br>C、启动、规划、执行、监控、收尾过程组<br>D、启动、执行、收尾过程组</p><p>答案：C。每个阶段都是一个子项目，都应该进行五大过程组。阶段＝子项目</p><p>在项目的什么时间点，项目经理将会审查控制措施？</p><p>A、在计划编制阶段<br>B、在启动和执行阶段<br>C、在项目收尾阶段<br>D、在项目过程中持续审查</p><p>答案：D。监控过程组贯穿整个项目始终。</p><p>执行过程组的主要目标是什么？</p><p>A. 跟踪并审查项目进度<br>B. 管理利害关系者的期望<br>C. 满足项目规范<br>D．监控进度表</p><p>答案:C.执行过程组定义：完成项目管理计划中的工作，满足项目规范要求。</p><blockquote><p>关注公众号，随时随地获取编程知识，面试题，PMP等相关资料<br><img src="http://upload-images.jianshu.io/upload_images/7326374-acf306463da9635e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信公众号"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PMP备考指南之相关事项介绍</title>
      <link href="/2019/04/22/pmp/PMP01/"/>
      <url>/2019/04/22/pmp/PMP01/</url>
      
        <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/7326374-15a6057e82bcb5dd.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="PMP相关事项" title="PMP相关事项"></p><blockquote><p>每天进步一点，不做curd工程师与Api调用工程师<br>欢迎关注个人博客网站：<a href="https://www.coder-programming.cn/" target="_blank" rel="noopener">https://www.coder-programming.cn/</a></p></blockquote><blockquote><p>本文已同步至 <a href="https://github.com/CoderMerlin/coder-programming" target="_blank" rel="noopener">GitHub</a>/<a href="https://gitee.com/573059382/coder-programming" target="_blank" rel="noopener">Gitee</a>/公众号，感兴趣的同学帮忙点波关注~</p></blockquote><p>PMP是当今IT、通信、建筑、等高新技术行业的热门资格认证，无论是技术升级管理，还是管理者的能力提升，都离不开PMP的理论体系。今天就来介绍下PMP备考前的相关内容。</p><h2 id="PMP认证的报名条件"><a href="#PMP认证的报名条件" class="headerlink" title="PMP认证的报名条件"></a>PMP认证的报名条件</h2><p>1、申请者具有学士学位或同等的大学学历，并且须至少具有4500小时的项目管理相关经历。PMI要求申请者需至少3年以上，具有4500小时的项目管理经历(计算方法：不重叠累积)。仅在申请日之前6年之内的经历有效。</p><p>2、申请者虽不具备学士学位或同等大学学历，但持有中学文凭或同等中学学历证书， 并且至少具有7500小时的项目管理经历(计算方法：不重叠累积)。PMI要求申请者需至少5年以上，具有7500小时的项目管理经历。仅在申请日之前8年之内的经历有效。</p><p>3、具备PMI授权培训机构颁发的35PDU培训证书(必须由PMI或中国外专局授权的培训机构出具)。报考者可以在资格申请后的一年内，申请考试。</p><h2 id="PMP考试时间"><a href="#PMP考试时间" class="headerlink" title="PMP考试时间"></a>PMP考试时间</h2><p>PMP每年有4次的考试机会，分别是 3月30日、6月22日、9月7日、12月7日。<br>而PMP认证考试报名时间一般是在PMP考试前两个半月截止，建议大家提前做好时间计划!</p><h2 id="考试费用"><a href="#考试费用" class="headerlink" title="考试费用"></a>考试费用</h2><p>一、初考：2018年PMP认证考试初考需要交纳3900元人民币。（培训费另算）</p><p>二、重考：未通过PMP考试的考生，建议及时报名参加重考，因为考生只有一年的资格期来通过考试，在资格期内，有2-3次的考试机会。重考者需要交纳重考费。重考费为2500元人民币。（培训费另算）</p><p>注：缴费方式只能使用汇款/转账。</p><h2 id="PMP-考试介绍"><a href="#PMP-考试介绍" class="headerlink" title="PMP 考试介绍"></a>PMP 考试介绍</h2><ul><li><p>它是笔试，200 道选择题，都是单选题，四选一；</p></li><li><p>不做选择，算答错。选了多个，也算错；</p></li><li><p>中英文对照，对于中国考生看中文就可以了，但是有些题的翻译不咋样，所以当读到题 目有些别扭、或者觉得选项与题目都有点不符的时候，应该对照一下英文；</p></li><li><p>200 题里面有 25 题不计分，是 PMI 用来测试本次考试是否太难、或太容易、或者争议 非常大的题目。但是这 25 题并不知道是哪些，随机散乱的分布在试卷中。所以 200 题的 PMP 考试，131 及以上算是及格，我们清晖要求 140 以上。</p></li><li><p>答题时间：9：00～13：00，共计 4 个小时。</p></li></ul><h2 id="PMP-考试试题分布"><a href="#PMP-考试试题分布" class="headerlink" title="PMP 考试试题分布"></a>PMP 考试试题分布</h2><table><thead><tr><th>过程组</th><th>比例</th><th>题目数量</th></tr></thead><tbody><tr><td>启动过程组</td><td>13%</td><td>26 题</td></tr><tr><td>规划过程组</td><td>24%</td><td>48 题</td></tr><tr><td>执行过程组</td><td>30%</td><td>60 题</td></tr><tr><td>监控过程组</td><td>25%</td><td>50 题</td></tr><tr><td>收尾过程组</td><td>8%</td><td>16 题</td></tr></tbody></table><p>1、题目也是随机分布，不按过程组顺序。<br>2、从 2017 年 9 月份的考试开始，PMI 对 PMP 的成绩显示进行了调整，不再用之前的 P\M\B 三个等级来体现成绩，而是以：Needs Improvement（需要提高） \ Below Target（低 于目标） \ Targer（目标水平） \ Above Target（高于目标） 四个标准来分别体现五个过程 组的成绩状态。<br>考题类型：<br>1、直接考输入、工具、输出的题，这类题较少，5 题以内。<br>2、情景题：PM 在管理一个项目，前一个阶段如何„.后一个阶段„客户提出变更，问 PM 下 一步应该怎么办？<br>3、过程描述题：描述了某一处理过程，问这是应用的哪一项技术？项目团队采用的是哪一 种工具？项目经理使用的是哪种风险应对策略？<br>4、计算题：挣值管理、风险管理、三点估算、关键路径时差等等。<br>5、管理常识题：墨菲定律、彼得原理等<br>6、冷僻题：比如 KISS 法则：Keep It Simple and Stupid 简约并不简单。</p><h2 id="PMI-理念"><a href="#PMI-理念" class="headerlink" title="PMI 理念"></a>PMI 理念</h2><p>1 、项目经理是整合者，是在做整合管理。<br>项目经理对项目管理负责，“管理”是你的核心任务，项目经理并不需要亲自去做所有 事情，比如：并不需要亲自写代码、并不需要负责所有风险、并不需要解决所有问题，PMI 讲究团队合作。</p><p>2 、项目经理必须被授权。<br>就像我们做项目首先需要立项，获得项目批准书。没有被授权的项目经理就像没有拿到 “圣旨”，就没有权力调动或使用资源。各个公司可能叫法不同，有的叫立项报告。但是 PMI 统一把项目批准书称为“项目章程”。项目章程的批准就意味着项目经理被授权了。</p><p>3 、项目经理要积极主动，鼓励干系人的参与。<br>项目经理不能简单地服从领导安排，也不能消极拖延工作。</p><p>4 、拒绝镀金，拒绝多此一举。<br>镀金：是项目人员为了“讨好”客户而“画蛇添足”做的项目活动。PMI 觉得镀金的 项目是失败的，反对镀金。比如客户要 PM 去买包烟，PM 买了烟后又私自决定给客户配了 个打火机。这就是镀金了，客户并不需要打火机，也许客户自己有更高级的“ZIPPO”。镀金，是画蛇添足、因为浪费了资源。镀金，PMI 是明令禁止。</p><p>5 、项目团队必须得到尊重、重视、并且要及时沟通，反对免费加班。</p><p>6 、做项目时有两个因素必须考虑：组织过程资产、事业环境因素。<br>组织过程资产：比如，项目做完了，收尾时候把成功经验和失败教训记录在组织过程资 产中，下一个项目启动时要参考组织过程资产。组织过程资产当中，不仅仅包括经验教训， 还有其他，我们后续章节会陆续介绍。事业环境因素：是项目团队无法改变的，比如：公司文化、公司的制度、政治氛围等。</p><h2 id="答题技巧"><a href="#答题技巧" class="headerlink" title="答题技巧"></a>答题技巧</h2><p>1、一定要看清四个选项后，选择一个相对正确的答案。有时候四个选项都没有原则性的错 误，但是要选一个“最”对的.</p><p>2、PMP 考试答题不能完全按照自己的实际工作凭经验判断，美国人的思路跟我们有些差异, 答题要从 PMI 理念的角度出发。</p><p>比如：实际工作中为了提高客户满意度，会赠送一些增值功能，而这些功能在原本约定的范 围中没有的，这就是镀金。但是 PMI 的态度是非常坚决的，反对镀金。</p><p>3、注意区分多余和误导信息，注意题目中问什么，有些题目问：以上都是正确的，除了？</p><p>4、项目经理直接拒绝、和直接服从的肯定要排除，绝对不是答案。项目经理要积极主动。</p><p>5、对于项目团队的管理，要注意人性化管理，如团队成员疲劳，应支持休息，反对加班， 一般来说牺牲团队个人休息、休假、离职等请求的选项都不正确。</p><p>6、一般不选 PMBOK 中没有出现过的陌生词汇，这样太不专业了；</p><p>比如：在月项目状态会上，客户抱怨缺乏与项目进展有关的信息。项目经理应参考下列哪一 份文件？<br>A、进度进展报告<br>B、进度管理计划<br>C、沟通管理计划<br>D、工作绩效报告</p><p>题干说“客户抱怨缺乏与项目进展有关的信息”，凭经验判断答案选 A 进度进展报告。但是 PMBOK 并没有“进度进展报告”这个说法，一定不能选 A，选 A 太不专业了，A 就 是用来打酱油的。<br>正确答案 C ，缺乏信息是因为没有沟通导致的。</p><h2 id="学习方法与建议"><a href="#学习方法与建议" class="headerlink" title="学习方法与建议"></a>学习方法与建议</h2><p>距离考试有接近三个月时间。</p><p>1 、 学习时间<br>模拟考试前：每天 1<del>2 小时复习，模拟考试后：每天 3</del>4 小时。绝大多数考试不过的 原因，是学习时间不够。所以请大家务必坚持每天学习。</p><p>2 、学习方式<br>模拟考试前：看讲义、看 PMBOK、做单元测试题；模拟考试后：看讲义、看 PMBOK、模拟考试题、单元测试。注：输入、工具、输出简称 ITTO。</p><p>3 、学习技巧<br>（1）温故而知新，不仅要多看错题，做完一套题，对的也要重看一遍。因为难免有些题是我们蒙对的，虽然选对了，但是我们并不知道具体原理，为了保证下一次不需要蒙，我们也都要看一遍，保证做过的每一道题，我们都清楚的知道其中的原理，或者同类型的选择方式。<br>（2）要善于总结，对于自己的错题和易混淆题，应该善于对比、总结，自己记录其中的规律。<br>（3）要善于利用碎片化时间进行学习。大家白天上班很忙，晚上也没整块的时间学习，那么就要善于利用上<br>班路上、下班回家路上、中午休息或者晚上睡前的时间多多学习。</p><p><img src="http://upload-images.jianshu.io/upload_images/7326374-acf306463da9635e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信公众号"></p>]]></content>
      
      
      <categories>
          
          <category> PMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PMP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
